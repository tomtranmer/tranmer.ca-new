name: Preview Deploy

on:
  push:
    branches:
      - preview
  workflow_dispatch:

jobs:
  trigger-vercel:
    runs-on: ubuntu-latest
    env:
      HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK_URL_PREVIEW }}
  PREVIEW_URL: https://tranmer-ca-new.vercel.app
    steps:
      - name: Ensure deploy hook secret is configured
        if: ${{ env.HOOK == '' }}
        run: |
          echo "::error::GitHub secret VERCEL_DEPLOY_HOOK_URL_PREVIEW is not set.\nCreate a Vercel Deploy Hook for the 'preview' branch and add its URL to repo settings: Settings > Secrets and variables > Actions." && exit 1

      - name: Trigger Vercel preview deployment
        if: ${{ env.HOOK != '' }}
        env:
          HOOK: ${{ env.HOOK }}
        run: |
          echo "Triggering Vercel deploy hook for $GITHUB_REF ($GITHUB_SHA)"
          STATUS=$(curl -sS -o /dev/null -w "%{http_code}" -X POST "$HOOK" \
            -H 'Content-Type: application/json' \
            -d "{\"event\":\"github-actions\",\"sha\":\"$GITHUB_SHA\",\"ref\":\"$GITHUB_REF\"}")
          echo "HTTP $STATUS"
          if [ "$STATUS" -lt 200 ] || [ "$STATUS" -ge 400 ]; then
            echo "::error::Vercel hook returned HTTP $STATUS" && exit 1
          fi

      - name: Publish GitHub deployment link
        if: ${{ env.HOOK != '' }}
        uses: actions/github-script@v7
        env:
          PREVIEW_URL: ${{ env.PREVIEW_URL }}
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref.replace('refs/heads/',''),
              auto_merge: false,
              required_contexts: [],
              environment: 'preview',
              description: 'Vercel Preview',
              transient_environment: true,
              production_environment: false,
            })
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              environment: 'preview',
              environment_url: process.env.PREVIEW_URL,
              log_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: 'Preview deployment triggered'
            })
